package web_maven_hibernate;

import java.io.File;
import java.io.IOException;

import com.fasterxml.jackson.databind.JsonNode;
import com.fasterxml.jackson.databind.ObjectMapper;

public class DestinationHashGenerator {

	public static void main(String[] args) {
		
		String prnNo = args[0].toLowerCase();
		String filePath = args[1];
		
		try
		{
			ObjectMapper mapper = new ObjectMapper();
			JsonNode rootNode = mapper.readTree(new File(filePath));
			
			String destinationValue = findFirstDestination(rootNode);
			if (destinationValue == null) {
                System.out.println("No destination key founnd !!");
                return;
            }
		}catch (IOException e) {
			System.out.println(e.getMessage());
		}
		
	}
	
	private static String findFirstDestination(JsonNode node) {
		if (node.has("destination")) {
            return node.get("destination").asText();
        }

        // Traverse through all the child nodes
        for (JsonNode childNode : node) {
            String result = findFirstDestination(childNode);
            if (result != null) {
                return result; // Stop as soon as we find the first "destination"
            }
        }

        return null; //
	}
}
